#!usr/bin/python
# -*- coding: utf-8 -*-
import applogin
import rdexcel
import requests
import json
import applogin
import sys
import xlwt
import time
import httplib

default_encoding = 'utf-8'
if sys.getdefaultencoding() != default_encoding:
    reload(sys)
    sys.setdefaultencoding(default_encoding)



def getcar():
    # httplib.HTTPConnection._http_vsn = 10
    # httplib.HTTPConnection._http_vsn_str = 'HTTP/1.0'
    # print("11111")
    wbk = xlwt.Workbook()
    sheet = wbk.add_sheet('sheet1', cell_overwrite_ok=True)
    # id_list = []
    # for i in range(1, 8):
    #     url = "HTTP://erp.nice-car.cn//server1/process/queryRunning"
    #     data = {
    #         "data": {
    #             "systemType": 0,
    #             "pageNo": i,
    #             "pageSize": 100,
    #             "status": "1",
    #             "departmentId": "3421",
    #             "startDate": "2018-03-29",
    #             "endDate": "2019-05-08",
    #             "orderMethod": "desc"
    #         },
    #         "header": {
    #             "app": " ",
    #             "gps": " ",
    #             "os": " ",
    #             "ver": " ",
    #             "token": "d2b80714-d9b3-4949-85ea-33e9a2c6bb84"
    #         }
    #     }
    #     para = json.dumps(data)
    #     headers = {'Content-Type': "application/json"
    #                }
    #     r = requests.request("POST", url, data=para, headers=headers)
    #     r = json.loads(r.text)
    #
    #     # print(str(r['data']['data']).replace('u\'', '\'').decode('unicode_escape'))
    #     # indexing is zero based, row then column
    #     for i in range(0, len(r['data']['data'])):
    #         # print r['data']['data'][i]['custIdcard']
    #         id_list.append(r['data']['data'][i]['loanRequestId'])
    # # sheet.write(i, 0, r['data']['data'][i]['loanRequestId'])
    # # wbk.save('test2.xls')
    # print(len(id_list))
    # print(id_list)
    id_list=[
318111, 318155, 318339, 318348, 318426, 318473, 318589, 318593, 318750, 318811, 318828, 318864, 318933, 318942, 318943, 318954, 319033, 319135, 319163, 319222, 319223, 319227, 319486, 319532, 319534, 319721, 319722, 319946, 320294, 320358, 320389, 320512, 320523, 320683, 320708, 320812, 321075, 321078, 321289, 321402, 321490, 321501, 321528, 321690, 321860, 321889, 322021, 322048, 322060, 322064, 322124, 322242, 322268, 322388, 322514, 322567, 322623, 322824, 322840, 322904, 322980, 322996, 323386, 323402, 323427, 323486, 323510, 323634, 323684, 323754, 323759, 323762, 323776, 323789, 323826, 323911, 323934, 324067, 324073, 324103, 324129, 324175, 324178, 324209, 324219, 324248, 324270, 324316, 324390, 324433, 324450, 324523, 324539, 324683, 324721, 324776, 325012, 325015, 325073, 325102, 325119, 325139, 325158, 325284, 325287, 325291, 325298, 325318, 325355, 325358, 325373, 325561, 325583, 325644, 325718, 325822, 325848, 325928, 325938, 325961, 326010, 326053, 326082, 326146, 326153, 326465, 326468, 326493, 326495, 326563, 326638, 326729, 326745, 326771, 326775, 326792, 327190, 327194, 327218, 327258, 327328, 327340, 327349, 327427, 327460, 327469, 327473, 327577, 327588, 327726, 327829, 327833, 327894, 327922, 327966, 327967, 327982, 328064, 328086, 328092, 328106, 328145, 328153, 328207, 328234, 328319, 328372, 328386, 328420, 328434, 328450, 328591, 328630, 328633, 328744, 328815, 328882, 328924, 328953, 328954, 329099, 329257, 329276, 329472, 329494, 329500, 329504, 329627, 329849, 330020, 330055, 330116, 330195, 330218, 330487, 330491, 330594, 330600, 330625, 330646, 330672, 330688, 330712, 330802, 330832, 330867, 330946, 331004, 331098, 331138, 331143, 331155, 331184, 331226, 331265, 331306, 331311, 331358, 331713, 331787, 331868, 331869, 331872, 331886, 331891, 331904, 332045, 332071, 332085, 332156, 332402, 332465, 332716, 332730, 332806, 333014, 333016, 333129, 333237, 333311, 333423, 333457, 333516, 333557, 333564, 333602, 333605, 333714, 333730, 333754, 333813, 333865, 333901, 334027, 334215, 334225, 334252, 334387, 334673, 334744, 334881, 334921, 334927, 334928, 334997, 335090, 335202, 335237, 335248, 335379, 335468, 335470, 335532, 335587, 335657, 335715, 335912, 336035, 336036, 336078, 336119, 336139, 336215, 336588, 336628, 336763, 336809, 336816, 336856, 336875, 336882, 336890, 336934, 336947, 336961, 337001, 337223, 337252, 337400, 337591, 337600, 337610, 337682, 337685, 337712, 337733, 337750, 337796, 337798, 337805, 337843, 337973, 337989, 338023, 338062, 338145, 338267, 338366, 338436, 338551, 338586, 338599, 338687, 338749, 338753, 338767, 338769, 338807, 338883, 339004, 339059, 339145, 339146, 339163, 339227, 339411, 339519, 339552, 339618, 339651, 339689, 339727, 339732, 339757, 339839, 339877, 339882, 339991, 340027, 340193, 340463, 340655, 340731, 340790, 340822, 340840, 340897, 341057, 341114, 341205, 341276, 341290, 341317, 341388, 341393, 341672, 341740, 341821, 341864, 342012, 342059, 342123, 342169, 342196, 342242, 342260, 342266, 342276, 342387, 342399, 342442, 342445, 342448, 342560, 342581, 342631, 342717, 342731, 342846, 342850, 342908, 343004, 343048, 343049, 343057, 343269, 343281, 343294, 343379, 343385, 343387, 343475, 343681, 343799, 343883, 343996, 344011, 344057, 344294, 344296, 344436, 344500, 344514, 344560, 344599, 344648, 344700, 344785, 344854, 344956, 344963, 345002, 345082, 345090, 345418, 345476, 345596, 345612, 345966, 345967, 346003, 346069, 346083, 346164, 346166, 346171, 346236, 346381, 346400, 346548, 346628, 346839, 346892, 347057, 347230, 347245, 347350, 347390, 347393, 347396, 347402, 347411, 347416, 347446, 347580, 347597, 347602, 347641, 347753, 347815, 347822, 347857, 347897, 347948, 348002, 348068, 348237, 348269, 348329, 348331, 348407, 348411, 348427, 348428, 348616, 348624, 348631, 348714, 348922, 348929, 349002, 349114, 349117, 349119, 349121, 349148, 349307, 349310, 349384, 349478, 349750, 349784, 349814, 349827, 349832, 349872, 349910, 349918, 349999, 350036, 350074, 350089, 350127, 350137, 350227, 350345, 350389, 350450, 350515, 350607, 350617, 350642, 350656, 351033, 351054, 351099, 351144, 351181, 351226, 351249, 351250, 351329, 351472, 351491, 351757, 351763, 351818, 351831, 351888, 351926, 351962, 351984, 352034, 352097, 352134, 352139, 352280, 352413, 352466, 352477, 352494, 352502, 352707, 352723, 352729, 352744, 352818, 352861, 352877, 352883, 352908, 352919, 352951, 353005, 353079, 353137, 353145, 353197, 353327, 353340, 353341, 353456, 353528, 353604, 353628, 353717, 353734, 353754, 353755, 353780, 353856, 353860, 353903, 353908, 353952, 353971, 354007, 354058, 354153, 354163, 354275, 354351, 354452, 354556, 354616, 354727, 354750, 354754, 354763, 354916, 354926, 354927, 355038, 355044, 355061, 355134, 355143, 355154, 355196, 355265, 355410, 355440, 355450, 355471, 355530, 355561, 355594, 355597, 355629, 355659, 355752, 355794, 355817, 355820, 355857, 355899, 355939, 355965, 356001, 356003, 356200, 356207, 356257, 356306, 356309, 356310, 356319, 356338, 356348, 356510, 356698, 356720, 356732, 356775, 356815, 356817, 356822, 356823, 356827, 356830, 356834, 356838, 356844, 356928, 356934, 357053, 357091, 357105, 357111, 357134, 357148, 357203, 357243, 357337, 357368, 357441, 357450, 357470, 357482, 357584, 357588, 357595, 357650, 357789, 357839, 357887, 357965, 357977, 358009, 358053, 358067, 358070, 358150, 358279, 358305, 358429, 358430, 358564, 358622, 358655, 358710, 358836, 358867, 358965, 359073, 359079, 359087, 359126, 359175, 359199, 359205, 359210, 359222, 359242, 359267, 359271, 359316, 359457, 359477, 359482]
    for i in range(0, len(id_list)):
        url = "http://erp.nice-car.cn/server1/process/queryDetails"
        print(id_list[i])
        data = {
            "data": id_list[i],
            "header": {
                "app": " ",
                "gps": " ",
                "os": " ",
                "ver": " ",
                "token": "d2b80714-d9b3-4949-85ea-33e9a2c6bb84"
            }
        }
        para = json.dumps(data)
        headers = {'Content-Type': "application/json",
                   "Set-Cookie": "SERVERID=7565b9a0e815c05d710a7b7d84628bfd|1554702951|1554701874;Path=/server1",
                   "Content-Type": "application/json;charset=UTF-8",
                   "Connection": "keep-alive",
                   "User-Agent": "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3", }
        # time.sleep(1)
        # print(para)
        # print(url)
        # print("come in")
        r = requests.request("POST", url, data=para, headers=headers)

        # print("come out")
        # print(r.text)
        # print(r.text)
        r = json.loads(r.text)
        print(r['header']['msg'][0])
        # print( r['data']['custIdcard'])

        print(i)
        print(r['data']['custName'])
        sheet.write(i, 0, r['data']['custIdcard'])
        sheet.write(i, 1, r['data']['custName'])
        sheet.write(i, 2, r['data']['custMobile'])
        sheet.write(i, 3, r['data']['carModel'])
        sheet.write(i, 4, r['data']['loanAmount'])
        wbk.save('test2.xls')


a = getcar()
